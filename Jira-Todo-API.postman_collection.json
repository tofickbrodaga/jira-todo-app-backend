{
	"info": {
		"_postman_id": "2dc96ea8-339f-4ac0-9916-e9a7c0a785a8",
		"name": "Jira-Todo API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32830528"
	},
	"item": [
		{
			"name": "1. Auth",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser_postman\",\n    \"email\": \"test.postman@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Создает нового пользователя."
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Этот скрипт автоматически сохраняет токен авторизации в переменные окружения",
									"// после успешного входа в систему.",
									"var jsonData = pm.response.json();",
									"if (jsonData.token) {",
									"    pm.environment.set(\"authToken\", jsonData.token);",
									"    console.log(\"Auth Token saved to environment.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test.postman@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Аутентифицирует пользователя и возвращает токен. Токен автоматически сохраняется в переменной окружения `authToken`."
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Boards",
			"item": [
				{
					"name": "Create Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Сохраняем ID созданной доски для последующих запросов",
									"var jsonData = pm.response.json();",
									"if (jsonData._id) {",
									"    pm.environment.set(\"boardId\", jsonData._id);",
									"    console.log(\"Board ID saved to environment.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Моя тестовая доска из Postman\",\n    \"description\": \"Описание доски\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/boards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Boards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/boards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Columns",
			"item": [
				{
					"name": "Create Column",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Сохраняем ID созданной колонки для последующих запросов",
									"var jsonData = pm.response.json();",
									"if (jsonData._id) {",
									"    pm.environment.set(\"columnId\", jsonData._id);",
									"    console.log(\"Column ID saved to environment.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"To Do\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/boards/{{boardId}}/columns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards",
								"{{boardId}}",
								"columns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Columns for Board",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/boards/{{boardId}}/columns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards",
								"{{boardId}}",
								"columns"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Tasks",
			"item": [
				{
					"name": "Create Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Сохраняем ID созданной задачи для последующих запросов",
									"var jsonData = pm.response.json();",
									"if (jsonData._id) {",
									"    pm.environment.set(\"taskId\", jsonData._id);",
									"    console.log(\"Task ID saved to environment.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Моя первая задача\",\n    \"description\": \"Нужно сделать что-то важное\",\n    \"column\": \"{{columnId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/boards/{{boardId}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards",
								"{{boardId}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tasks for Board",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/boards/{{boardId}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"boards",
								"{{boardId}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"inprogress\",\n    \"priority\": \"high\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Comments",
			"item": [
				{
					"name": "Add Comment to Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Сохраняем ID созданного комментария для последующего удаления",
									"var jsonData = pm.response.json();",
									"// Ответ - это массив комментариев, новый - первый в списке",
									"if (jsonData && jsonData.length > 0 && jsonData[0]._id) {",
									"    pm.environment.set(\"commentId\", jsonData[0]._id);",
									"    console.log(\"Comment ID saved to environment.\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Это тестовый комментарий.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{taskId}}/comments/{{commentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"comments",
								"{{commentId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}